{"version":3,"sources":["components/Users.tsx","lib/PreloadContext.ts","containers/UsersContainer.tsx","components/User.tsx","containers/UserContainer.tsx","pages/UsersPage.tsx"],"names":["Users","users","map","user","to","id","username","PreloadContext","createContext","Preloader","resolve","preloadContext","useContext","done","promises","push","Promise","connect","state","getUsers","useEffect","User","email","name","UserContainer","useSelector","dispatch","useDispatch","usePreloader","getUser","parseInt","UsersPage","path","render","match","params"],"mappings":"0JAsBeA,MAff,YAAmC,IAAlBC,EAAiB,EAAjBA,MACf,OAAKA,EAEH,8BACE,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,6BACE,cAAC,IAAD,CAAMC,GAAE,iBAAYD,EAAKE,IAAzB,SAAgCF,EAAKG,YAD9BH,EAAKE,WALH,M,QCNfE,EAAiBC,wBAAc,MAOxBC,EAAY,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QACpBC,EAAiBC,qBAAgBL,GACvC,OAAKI,GACDA,EAAeE,MAEnBF,EAAeG,SAASC,KAAKC,QAAQN,QAAQA,MAFb,MADJ,MCkB9B,IAEeO,eAFS,SAACC,GAAD,MAAuB,CAAEjB,MAAOiB,EAAMjB,MAAMA,SAE5B,CAAEkB,cAA3BF,EAlBf,YAAsD,IAA5BhB,EAA2B,EAA3BA,MAAOkB,EAAoB,EAApBA,SAQ/B,OAPAC,qBAAU,WACJnB,GAGJkB,MACC,CAACA,EAAUlB,IAGZ,qCACE,cAAC,EAAD,CAAOA,MAAOA,IACd,cAAC,EAAD,CAAWS,QAASS,UCTXE,MAbf,YAAiD,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAAMjB,EAAmB,EAAnBA,SAC3B,OACE,gCACE,+BACGA,EADH,KACeiB,EADf,OAGA,8BACE,wCADF,IACkBD,SCoBTE,MAlBf,YAAqD,IAA5BnB,EAA2B,EAA3BA,GACjBF,EAAOsB,aAAY,SAACP,GAAD,OAAsBA,EAAMjB,MAAME,QACrDuB,EAAWC,cASjB,OHJ0B,SAACjB,GAC3B,IAAMC,EAAiBC,qBAAgBL,GAClCI,IACDA,EAAeE,MACnBF,EAAeG,SAASC,KAAKC,QAAQN,QAAQA,OGP7CkB,EAAa,kBAAMF,EAASG,YAAQC,SAASzB,QAE7Ce,qBAAU,WACJjB,GAAQA,EAAKE,KAAOyB,SAASzB,EAAI,KACrCqB,EAASG,YAAQC,SAASzB,OACzB,CAACqB,EAAUrB,EAAIF,IAEbA,EAIE,cAAC,EAAD,CAAME,GAAIF,EAAKE,GAAIiB,MAAOnB,EAAKmB,MAAOhB,SAAUH,EAAKG,SAAUiB,KAAMpB,EAAKoB,OAHxE,M,OCVIQ,UATf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,aAAaC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,cAAC,EAAD,CAAe7B,GAAI6B,EAAMC,OAAO9B","file":"static/js/pages-UsersPage.972c4f2c.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport { IUser } from '../modules/users';\r\n\r\ninterface IProps {\r\n  users: null | IUser[];\r\n}\r\n\r\nfunction Users({ users }: IProps) {\r\n  if (!users) return null;\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {users.map((user) => (\r\n          <li key={user.id}>\r\n            <Link to={`/users/${user.id}`}>{user.username}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","import { createContext, useContext } from 'react';\r\n\r\nconst PreloadContext = createContext(null);\r\nexport default PreloadContext;\r\n\r\ninterface IPreloader {\r\n  resolve: any;\r\n}\r\n\r\nexport const Preloader = ({ resolve }: IPreloader) => {\r\n  const preloadContext = useContext<any>(PreloadContext);\r\n  if (!preloadContext) return null;\r\n  if (preloadContext.done) return null;\r\n\r\n  preloadContext.promises.push(Promise.resolve(resolve()));\r\n  return null;\r\n};\r\n\r\nexport const usePreloader = (resolve: any) => {\r\n  const preloadContext = useContext<any>(PreloadContext);\r\n  if (!preloadContext) return null;\r\n  if (preloadContext.done) return null;\r\n  preloadContext.promises.push(Promise.resolve(resolve()));\r\n};\r\n","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Users from '../components/Users';\r\nimport { RootState } from '../modules';\r\nimport { getUsers, IUser } from '../modules/users';\r\nimport { Preloader } from '../lib/PreloadContext';\r\n\r\ninterface IProps {\r\n  users: null | IUser[];\r\n  getUsers: () => void;\r\n}\r\n\r\nfunction UsersContainer({ users, getUsers }: IProps) {\r\n  useEffect(() => {\r\n    if (users) {\r\n      return;\r\n    }\r\n    getUsers();\r\n  }, [getUsers, users]);\r\n\r\n  return (\r\n    <>\r\n      <Users users={users} />\r\n      <Preloader resolve={getUsers} />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({ users: state.users.users });\r\n\r\nexport default connect(mapStateToProps, { getUsers })(UsersContainer);\r\n","import { IUser } from '../modules/users';\r\n\r\nfunction User({ email, name, username }: IUser) {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        {username} ({name})\r\n      </h1>\r\n      <p>\r\n        <b>e-mail:</b> {email}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport User from '../components/User';\r\nimport { usePreloader } from '../lib/PreloadContext';\r\nimport { getUser } from '../modules/users';\r\nimport { RootState } from '../modules';\r\n\r\ninterface IUserContainerProps {\r\n  id: string;\r\n}\r\n\r\nfunction UserContainer({ id }: IUserContainerProps) {\r\n  const user = useSelector((state: RootState) => state.users.user);\r\n  const dispatch = useDispatch();\r\n\r\n  usePreloader(() => dispatch(getUser(parseInt(id))));\r\n\r\n  useEffect(() => {\r\n    if (user && user.id === parseInt(id, 10)) return;\r\n    dispatch(getUser(parseInt(id)));\r\n  }, [dispatch, id, user]);\r\n\r\n  if (!user) {\r\n    return null;\r\n  }\r\n\r\n  return <User id={user.id} email={user.email} username={user.username} name={user.name} />;\r\n}\r\n\r\nexport default UserContainer;\r\n","import UsersContainer from '../containers/UsersContainer';\r\nimport UserContainer from '../containers/UserContainer';\r\nimport { Route } from 'react-router-dom';\r\n\r\nfunction UsersPage() {\r\n  return (\r\n    <>\r\n      <UsersContainer />\r\n      <Route path=\"/users/:id\" render={({ match }) => <UserContainer id={match.params.id} />} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UsersPage;\r\n"],"sourceRoot":""}